/*
  Rui Santos
  Complete project details at https://RandomNerdTutorials.com/esp32-save-data-permanently-preferences/

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files.

  The above copyright notice and this permission notice shall be included in all
  copies or substantial portions of the Software.
*/

#include <Preferences.h>
#include "WiFi.h"

Preferences preferenze;

String ssid;
String password;
String telefono;
String indirizzo;
String nsCredentials="wifiCredentials";
String ssCredentials="stefano";






// const char * nsCredentials="wifiCredentials";

void writeCredentials() {
  ssid = "Casetta";
  password = "Casetta.Adsl";

  preferenze.begin(nsCredentials.c_str(), false);
  preferenze.putString("ssid", ssid);
  preferenze.putString("password", password);
  preferenze.putString("telefono", "123456789");

  Serial.println("Network Credentials Saved using Preferences");

  preferenze.end();
}




bool readCredentials() {
    bool found_it=true;

    preferenze.begin(nsCredentials.c_str(), true);

    ssid = preferenze.getString("ssid", "");
    password = preferenze.getString("password", "");

    if (ssid == "" || password == "") {
        Serial.println("No values saved for ssid or password");
        found_it=false;
    } else {
        Serial.println("values ssid and password have been read from flash memory");
        found_it=true;
    }

    preferenze.end();
    return found_it;
}






void setup() {
    Serial.begin(115200);
    Serial.println("waiting 5 seconds ..");
    delay(5000);


    // Serial.print("size Class: ");Serial.println(sizeof(xnsCredentials));
    // Serial.print("size Class: ");Serial.println(sizeof(nsCredentials));
    if (!readCredentials()) { // se falso ....
        writeCredentials();
    }

    // Connect to Wi-Fi
    WiFi.mode(WIFI_STA);
    WiFi.begin(ssid.c_str(), password.c_str());
    Serial.print("Connecting to WiFi ..");
    while (WiFi.status() != WL_CONNECTED) {
      Serial.print('.');
      delay(1000);
    }
    Serial.println(WiFi.localIP());
}

void loop() {
  // put your main code here, to run repeatedly:
    if (!readStefano()) { // se falso ....
        writeStefano();
    }
    delay(5000);
}



// const char * nsCredentials="wifiCredentials";

void writeStefano() {
  telefono = "123456_789";

  preferenze.begin(ssCredentials.c_str(), false);
  preferenze.putString("telefono", telefono);
  preferenze.putString("indirizzo", telefono);

  preferenze.end();

  Serial.println("Stefano Saved using Preferences");
  Serial.print("telefono: ");Serial.println(telefono);
  Serial.print("indirizzo: ");Serial.println(indirizzo);

}




bool readStefano() {
    bool found_it=true;

    preferenze.begin(ssCredentials.c_str(), true);

    telefono = preferenze.getString("telefono", "");
    indirizzo = preferenze.getString("indirizzo", "");

    if (telefono == "" || telefono != "xxxx" ) {
        Serial.println("No values found or wrong number for telefono");
        found_it=false;
    } else {
        Serial.println("value telefono has been read from flash memory");
        found_it=true;
    }

    preferenze.end();
    Serial.print("telefono: ");Serial.println(telefono);
    Serial.print("indirizzo: ");Serial.println(indirizzo);
    return found_it;
}

